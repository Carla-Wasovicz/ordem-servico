package br.edu.ifms.ordemservico.services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import br.edu.ifms.ordemservico.dto.OrdemDeServicoDTO;
import br.edu.ifms.ordemservico.entities.OrdemDeServico;
import br.edu.ifms.ordemservico.repositories.OrdemDeServicoRepository;

@Service
public class OrdemDeServicoService {
	@Autowired
	private OrdemDeServicoRepository repository;
	
	@Transactional(readOnly = true)
	public List<OrdemDeServicoDTO> findAll(){
		List<OrdemDeServico> list = repository.findAll();
		return list.stream().map(ordem -> new OrdemDeServicoDTO(ordem))
				.collect(Collectors.toList());
	}
	
	@Transactional(readOnly = true)
	public OrdemDeServicoDTO findById(Long id){
		Optional<OrdemDeServico> obj = repository.findById(id);
		OrdemDeServico ordemDeServico = obj.orElseThrow();
		return new OrdemDeServicoDTO(ordemDeServico);
	}
	
	@Transactional
	public OrdemDeServicoDTO insert(OrdemDeServicoDTO dto) {
		OrdemDeServico ordemDeServico = new OrdemDeServico();
		ordemDeServico.setEquipamento(dto.getEquipamento());
		ordemDeServico.setPatrimonio(dto.getPatrimonio());
		ordemDeServico.setSetor(dto.getSetor());
		ordemDeServico.setDescricaoProblema(dto.getDescricaoProblema());
		ordemDeServico.setDataCadastro(dto.getDataCadastro());
		ordemDeServico.setStatus(dto.getStatus());
		ordemDeServico.setPrioridade(dto.getPrioridade());
		ordemDeServico.setDescricaoSolucao(dto.getDescricaoSolucao());
		ordemDeServico.setServidor(dto.getServidor());
		ordemDeServico = repository.save(ordemDeServico);
		return new OrdemDeServicoDTO(ordemDeServico);
	}

}
